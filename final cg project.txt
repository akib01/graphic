//press 1 boat1 move and press2 boat1 stop
//press 3 boat2 move and press 4 boat2 stop
//press 5 boat3 move and press 6 boat3 stop
//press C cloud start and press E  cloud stop
//press s sun start and press n sun down
//press r rain start and press t rain stop

#include<GL/gl.h>
#include <stdio.h>
#include <iostream>
#include <GL/glut.h>
#include <math.h>


void scene();
void tree();
int meghStatus = 0;
int sunStatus =  0;
int boatStatus = 0;
int boatStatus1 = 0;
int boatStatus2 = 0;
int rainStatus = 0;
int sunDown=0;

float boatX = 0;
float boatY = 0;

float boatX1 = 0;
float boatY1 = 0;

float boatX2 = 0;
float boatY2 = 0;

float traRainX = 0;
float traRainY = 1500;

void drawBoat(int);
void drawBoat1(int);
void drawBoat2(int);

float sunX = 0;
float sunY = 0;

float meghX = 0;
float meghY = 0;


float move, angle;

		void DrawCircle(float cx, float cy, float r, int num_segments){

		 glBegin(GL_TRIANGLE_FAN);
		for (int i = 0; i < num_segments; i++)
		{
		float theta = 2.0f * 3.1415926f * float(i) / float(num_segments);//get the current angle

		float x = r * cosf(theta);//calculate the x component
		float y = r * sinf(theta);//calculate the y component

		glVertex2f(x + cx, y + cy);//output vertex

		}
		glEnd();
	}

	void drawSun(int x)

	{
		glColor3f(1.0, 0.22, 0.22);
		DrawCircle(1000, 1000, 70, 1000);
	}


	void megh(int x){


     //megh1
	glColor3f(1.0, 1.0, 1.0);
	DrawCircle(100, 1300, 60, 2000);//1
	DrawCircle(200,1300, 80, 2000);//2
	DrawCircle(300, 1300, 55, 2000);//3

	//megh2
	DrawCircle(700, 1300, 60, 2000);//1
	DrawCircle(800,1300, 80, 2000);//2
	DrawCircle(900, 1300, 55, 2000);//3

	//megh3
	DrawCircle(1100, 1300, 60, 2000);//1
	DrawCircle(1200,1300, 80, 2000);//2
	DrawCircle(1300, 1300, 55, 2000);//3

	//megh4
	DrawCircle(1700, 1300, 60, 2000);//1
	DrawCircle(1800,1300, 80, 2000);//2
	DrawCircle(1900, 1300, 55, 2000);//3


	}

	void movemegh()

	{
		if (meghStatus == 1)
		{
			meghX +=.5;
		}
		if (meghX>2000)
		{
			meghX = -200;
		}
		glPushMatrix();
		glTranslatef(meghX, meghY, 0);
		megh(1);
		glPopMatrix();


	}

	void moveSun()
	{

		 if(sunStatus == 1)
		  {
				 if (sunY>=350)
				 {sunY=350;
                sunY -= .5;
				 }
				 else
					sunY += .5;

		  }

          else  if(sunDown==1){
            sunY--;
	    }

			  glPushMatrix();

			 glTranslatef(sunX, sunY, 0);

     		 drawSun(1);
			 glPopMatrix();


	}


	void sky(){

	glBegin(GL_POLYGON); //Sky
	glColor3f(0.4, 0.5, 1.0);
	glVertex2i(0, 1500);
	glVertex2i(2000, 1500);
	glColor3f(0.7, 0.7, 1.0);
	glVertex2i(2000, 0);
	glVertex2i(0, 0);
	glEnd();



	}


	void scene()
{
	glPushMatrix();

	glBegin(GL_POLYGON); //Middle ground
	glColor3f(0.0, 0.7, 0.0);
	glVertex2i(0, 400);
	glVertex2i(0, 880);
	glVertex2i(1000, 830);
	glVertex2i(1200, 850);
	glVertex2i(1400, 830);
	glVertex2i(1600, 820);
	glVertex2i(1800, 800);
	glVertex2i(2020, 870);
	glVertex2i(2200, 400);


	glEnd();


	glBegin(GL_POLYGON); //Grass1
	glColor3f(0.0, 0.6, 0.3);
	glVertex2i(495, 830);
	glVertex2i(480, 840);
	glVertex2i(470, 850);
	glVertex2i(490, 850);
	glVertex2i(480, 880);
	glVertex2i(500, 850);
	glVertex2i(505, 900);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(510, 860);
	glVertex2i(530, 880);
	glVertex2i(520, 850);
	glVertex2i(540, 860);
	glVertex2i(530, 850);
	glVertex2i(515, 830);
	glEnd();

	glBegin(GL_POLYGON); //Grass2
	glColor3f(0.0, 0.6, 0.1);
	glVertex2i(565, 830);
	glVertex2i(550, 840);
	glVertex2i(540, 850);
	glVertex2i(560, 850);
	glVertex2i(550, 880);
	glVertex2i(570, 850);
	glVertex2i(575, 900);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(580, 860);
	glVertex2i(600, 880);
	glVertex2i(590, 850);
	glVertex2i(610, 860);
	glVertex2i(600, 850);
	glVertex2i(585, 830);
	glEnd();

	glBegin(GL_POLYGON); //Grass3
	glColor3f(0.0, 0.6, 0.3);
	glVertex2i(95, 830);
	glVertex2i(80, 840);
	glVertex2i(70, 850);
	glVertex2i(90, 850);
	glVertex2i(80, 880);
	glVertex2i(100, 850);
	glVertex2i(105, 900);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(110, 860);
	glVertex2i(130, 880);
	glVertex2i(120, 850);
	glVertex2i(140, 860);
	glVertex2i(130, 850);
	glVertex2i(115, 830);
	glEnd();

	glBegin(GL_POLYGON); //Grass4
	glColor3f(0.0, 0.6, 0.1);
	glVertex2i(55, 830);
	glVertex2i(40, 840);
	glVertex2i(30, 850);
	glVertex2i(50, 850);
	glVertex2i(40, 880);
	glVertex2i(60, 850);
	glVertex2i(65, 900);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(70, 860);
	glVertex2i(90, 880);
	glVertex2i(80, 850);
	glVertex2i(100, 860);
	glVertex2i(90, 850);
	glVertex2i(75, 830);
	glEnd();

	glBegin(GL_POLYGON); //Grass5
	glColor3f(0.0, 0.6, 0.3);
	glVertex2i(795, 830);
	glVertex2i(780, 840);
	glVertex2i(770, 850);
	glVertex2i(790, 850);
	glVertex2i(780, 880);
	glVertex2i(800, 850);
	glVertex2i(805, 900);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(810, 860);
	glVertex2i(830, 880);
	glVertex2i(820, 850);
	glVertex2i(840, 860);
	glVertex2i(830, 850);
	glVertex2i(815, 830);
	glEnd();

	glBegin(GL_POLYGON); //Grass6
	glColor3f(0.0, 0.6, 0.1);
	glVertex2i(865, 830);
	glVertex2i(850, 840);
	glVertex2i(840, 850);
	glVertex2i(860, 850);
	glVertex2i(850, 880);
	glVertex2i(870, 850);
	glVertex2i(875, 900);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(880, 860);
	glVertex2i(900, 880);
	glVertex2i(890, 850);
	glVertex2i(910, 860);
	glVertex2i(900, 850);
	glVertex2i(885, 830);
	glEnd();

	glBegin(GL_POLYGON); //Grass7
	glColor3f(0.0, 0.6, 0.3);
	glVertex2i(995, 830);
	glVertex2i(980, 840);
	glVertex2i(970, 850);
	glVertex2i(990, 850);
	glVertex2i(980, 880);
	glVertex2i(1000, 850);
	glVertex2i(1005, 900);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(1010, 860);
	glVertex2i(1030, 880);
	glVertex2i(1020, 850);
	glVertex2i(1040, 860);
	glVertex2i(1030, 850);
	glVertex2i(1015, 830);
	glEnd();

	glBegin(GL_POLYGON); //Grass8
	glColor3f(0.0, 0.6, 0.1);
	glVertex2i(1065, 830);
	glVertex2i(1050, 840);
	glVertex2i(1040, 850);
	glVertex2i(1060, 850);
	glVertex2i(1050, 880);
	glVertex2i(1070, 850);
	glVertex2i(1075, 900);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(1080, 860);
	glVertex2i(1100, 880);
	glVertex2i(1090, 850);
	glVertex2i(1110, 860);
	glVertex2i(1100, 850);
	glVertex2i(1085, 830);
	glEnd();

	glBegin(GL_POLYGON); //Grass9
	glColor3f(0.0, 0.6, 0.3);
	glVertex2i(1295, 830);
	glVertex2i(1280, 840);
	glVertex2i(1270, 850);
	glVertex2i(1290, 850);
	glVertex2i(1280, 880);
	glVertex2i(1300, 850);
	glVertex2i(1305, 900);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(1310, 860);
	glVertex2i(1330, 880);
	glVertex2i(1320, 850);
	glVertex2i(1340, 860);
	glVertex2i(1330, 850);
	glVertex2i(1315, 830);
	glEnd();

	glBegin(GL_POLYGON); //Grass10
	glColor3f(0.0, 0.6, 0.1);
	glVertex2i(1365, 830);
	glVertex2i(1350, 840);
	glVertex2i(1340, 850);
	glVertex2i(1360, 850);
	glVertex2i(1350, 880);
	glVertex2i(1370, 850);
	glVertex2i(1375, 900);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(1380, 860);
	glVertex2i(1400, 880);
	glVertex2i(1390, 850);
	glVertex2i(1410, 860);
	glVertex2i(1400, 850);
	glVertex2i(1385, 830);
	glEnd();

	glBegin(GL_POLYGON); //Grass11
	glColor3f(0.0, 0.6, 0.3);
	glVertex2i(1595, 800);
	glVertex2i(1580, 810);
	glVertex2i(1570, 820);
	glVertex2i(1590, 820);
	glVertex2i(1580, 850);
	glVertex2i(1600, 820);
	glVertex2i(1605, 870);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(1610, 830);
	glVertex2i(1630, 850);
	glVertex2i(1620, 820);
	glVertex2i(1640, 830);
	glVertex2i(1630, 820);
	glVertex2i(1615, 810);
	glEnd();

	glBegin(GL_POLYGON); //Grass12
	glColor3f(0.0, 0.6, 0.1);
	glVertex2i(1665, 800);
	glVertex2i(1650, 810);
	glVertex2i(1640, 820);
	glVertex2i(1660, 820);
	glVertex2i(1650, 850);
	glVertex2i(1670, 820);
	glVertex2i(1675, 870);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(1680, 830);
	glVertex2i(1700, 850);
	glVertex2i(1690, 820);
	glVertex2i(1710, 830);
	glVertex2i(1700, 820);
	glVertex2i(1685, 800);
	glEnd();

	glBegin(GL_POLYGON); //Grass13
	glColor3f(0.0, 0.6, 0.3);
	glVertex2i(1795, 800);
	glVertex2i(1780, 810);
	glVertex2i(1770, 820);
	glVertex2i(1790, 820);
	glVertex2i(1780, 850);
	glVertex2i(1800, 820);
	glVertex2i(1805, 870);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(1810, 830);
	glVertex2i(1830, 850);
	glVertex2i(1820, 820);
	glVertex2i(1840, 830);
	glVertex2i(1830, 820);
	glVertex2i(1815, 810);
	glEnd();

	glBegin(GL_POLYGON); //Grass14
	glColor3f(0.0, 0.6, 0.1);
	glVertex2i(1865, 800);
	glVertex2i(1850, 810);
	glVertex2i(1840, 820);
	glVertex2i(1860, 820);
	glVertex2i(1850, 850);
	glVertex2i(1870, 820);
	glVertex2i(1875, 870);
	glColor3f(0.8, 0.8, 0.1);
	glVertex2i(1880, 830);
	glVertex2i(1900, 850);
	glVertex2i(1890, 820);
	glVertex2i(1910, 830);
	glVertex2i(1900, 820);
	glVertex2i(1885, 800);
	glEnd();

	glBegin(GL_POLYGON); // River
	glColor3f(0.2, 0.4, 1.3);
	glVertex2i(0, 550);
	glVertex2i(0, 585);
	glVertex2i(650, 545);
	glVertex2i(800, 570);
	glVertex2i(1000, 580);
	glVertex2i(1500, 565);
	glVertex2i(2000, 570);
	glVertex2i(2000, 50);
	glVertex2i(0, 0);
	glEnd();


	glBegin(GL_POLYGON); //House
	glColor3f(0.9, 0.7, 0.1);
	glVertex2i(1050, 644);
	glVertex2i(1050, 760);
	glVertex2i(1130, 760);
	glVertex2i(1130, 644);
	glEnd();


	glBegin(GL_POLYGON); //House
	glColor3f(1.5, 1.5, 0.5);
	glVertex2i(1040, 760);
	glVertex2i(1090, 800);
	glVertex2i(1140, 760);
	glEnd();

	glBegin(GL_POLYGON); //Door
	glColor3f(1.0, 1.0, 0.0);
	glVertex2i(1070, 644);
	glVertex2i(1070, 730);
	glVertex2i(1110, 730);
	glVertex2i(1110, 644);
	glEnd();
	glBegin(GL_LINE_LOOP);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2i(1090, 730);
	glVertex2i(1090, 644);
	glEnd();

	glBegin(GL_POLYGON); //House2
	glColor3f(0.9, 0.7, 0.1);
	glVertex2i(1150,744);
	glVertex2i(1150,860);
	glVertex2i(1230,860);
	glVertex2i(1230,744);
	glEnd();


	glBegin(GL_POLYGON); //House2
	glColor3f(1.0, 1.0, 0.5);
	glVertex2i(1140,860);
	glVertex2i(1190,900);
	glVertex2i(1240,860);
	glEnd();

	glBegin(GL_POLYGON); //Door2
	glColor3f(1.0, 1.0, 0.0);
	glVertex2i(1170,744);
	glVertex2i(1170,830);
	glVertex2i(1210,830);
	glVertex2i(1210,744);
	glEnd();
	glBegin(GL_LINE_LOOP);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2i(1190,830);
	glVertex2i(1190,744);
	glEnd();

	glBegin(GL_POLYGON); //House3
	glColor3f(0.9, 0.7, 0.1);
	glVertex2i(950,744);
	glVertex2i(950,860);
	glVertex2i(1030,860);
	glVertex2i(1030,744);
	glEnd();


	glBegin(GL_POLYGON); //House3
	glColor3f(1.0, 1.0, 0.5);
	glVertex2i(940,860);
	glVertex2i(990,900);
	glVertex2i(1040,860);
	glEnd();

	glBegin(GL_POLYGON); //Door3
	glColor3f(1.0, 1.0, 0.0);
	glVertex2i(970,744);
	glVertex2i(970,830);
	glVertex2i(1010,830);
	glVertex2i(1010,744);
	glEnd();
	glBegin(GL_LINE_LOOP);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2i(990,830);
	glVertex2i(990,744);
	glEnd();

	glBegin(GL_POLYGON); //House4
	glColor3f(0.9, 0.7, 0.1);
	glVertex2i(250, 744);
	glVertex2i(250, 860);
	glVertex2i(330, 860);
	glVertex2i(330, 744);
	glEnd();


	glBegin(GL_POLYGON); //House4
	glColor3f(1.5, 1.5, 0.5);
	glVertex2i(240, 860);
	glVertex2i(290, 900);
	glVertex2i(340, 860);
	glEnd();

	glBegin(GL_POLYGON); //Door4
	glColor3f(1.0, 1.0, 0.0);
	glVertex2i(270, 744);
	glVertex2i(270, 830);
	glVertex2i(310, 830);
	glVertex2i(310, 744);
	glEnd();
	glBegin(GL_LINE_LOOP);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2i(290, 830);
	glVertex2i(290, 744);
	glEnd();

	glBegin(GL_POLYGON); //House5
	glColor3f(0.9, 0.7, 0.1);
	glVertex2i(350,744);
	glVertex2i(350,860);
	glVertex2i(430,860);
	glVertex2i(430,744);
	glEnd();


	glBegin(GL_POLYGON); //House5
	glColor3f(1.0, 1.0, 0.5);
	glVertex2i(340,860);
	glVertex2i(390,900);
	glVertex2i(440,860);
	glEnd();

	glBegin(GL_POLYGON); //Door5
	glColor3f(1.0, 1.0, 0.0);
	glVertex2i(370,744);
	glVertex2i(370,830);
	glVertex2i(410,830);
	glVertex2i(410,744);
	glEnd();
	glBegin(GL_LINE_LOOP);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2i(390,830);
	glVertex2i(390,744);
	glEnd();

	glBegin(GL_POLYGON); //House6
	glColor3f(0.9, 0.7, 0.1);
	glVertex2i(150,744);
	glVertex2i(150,860);
	glVertex2i(230,860);
	glVertex2i(230,744);
	glEnd();


	glBegin(GL_POLYGON); //House6
	glColor3f(1.0, 1.0, 0.5);
	glVertex2i(140,860);
	glVertex2i(190,900);
	glVertex2i(240,860);
	glEnd();

	glBegin(GL_POLYGON); //Door6
	glColor3f(1.0, 1.0, 0.0);
	glVertex2i(170,744);
	glVertex2i(170,830);
	glVertex2i(210,830);
	glVertex2i(210,744);
	glEnd();
	glBegin(GL_LINE_LOOP);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2i(190,830);
	glVertex2i(190,744);
	glEnd();

	glBegin(GL_POLYGON); //House7
	glColor3f(0.9, 0.7, 0.1);
	glVertex2i(650,744);
	glVertex2i(650,860);
	glVertex2i(730,860);
	glVertex2i(730,744);
	glEnd();


	glBegin(GL_POLYGON); //House7
	glColor3f(1.0, 1.0, 0.5);
	glVertex2i(640,860);
	glVertex2i(690,900);
	glVertex2i(740,860);
	glEnd();

	glBegin(GL_POLYGON); //Door7
	glColor3f(1.0, 1.0, 0.0);
	glVertex2i(670,744);
	glVertex2i(670,830);
	glVertex2i(710,830);
	glVertex2i(710,744);
	glEnd();
	glBegin(GL_LINE_LOOP);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2i(690,830);
	glVertex2i(690,744);
	glEnd();


	glBegin(GL_POLYGON); //House8
	glColor3f(0.9, 0.7, 0.1);
	glVertex2i(1650,744);
	glVertex2i(1650,860);
	glVertex2i(1730,860);
	glVertex2i(1730,744);
	glEnd();


	glBegin(GL_POLYGON); //House8
	glColor3f(1.0, 1.0, 0.5);
	glVertex2i(1640,860);
	glVertex2i(1690,900);
	glVertex2i(1740,860);
	glEnd();

	glBegin(GL_POLYGON); //Door8
	glColor3f(1.0, 1.0, 0.0);
	glVertex2i(1670,744);
	glVertex2i(1670,830);
	glVertex2i(1710,830);
	glVertex2i(1710,744);
	glEnd();
	glBegin(GL_LINE_LOOP);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2i(1690,830);
	glVertex2i(1690,744);
	glEnd();

	glBegin(GL_POLYGON); //House9
	glColor3f(0.9, 0.7, 0.1);
	glVertex2i(1450,744);
	glVertex2i(1450,860);
	glVertex2i(1530,860);
	glVertex2i(1530,744);
	glEnd();


	glBegin(GL_POLYGON); //House9
	glColor3f(1.0, 1.0, 0.5);
	glVertex2i(1440,860);
	glVertex2i(1490,900);
	glVertex2i(1540,860);
	glEnd();

	glBegin(GL_POLYGON); //Door9
	glColor3f(1.0, 1.0, 0.0);
	glVertex2i(1470,744);
	glVertex2i(1470,830);
	glVertex2i(1510,830);
	glVertex2i(1510,744);
	glEnd();
	glBegin(GL_LINE_LOOP);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2i(1490,830);
	glVertex2i(1490,744);
	glEnd();


	glPopMatrix();

}

void hills(){

		glColor3f(0.4, 0.4, 0.2);
		DrawCircle(200, 600, 500, 1000); //1
		glColor3f(0.4, 0.4, 0.2);
		DrawCircle(800,600,500, 1000);//2
		glColor3f(0.4, 0.4, 0.2);
		DrawCircle(1400, 600, 500, 1000);//3
		glColor3f(0.4, 0.4, 0.2);
		DrawCircle(2000, 600, 500, 1000);//4

	}

	void tree()
{
	glPushMatrix();

	glBegin(GL_POLYGON); //Tree
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(935, 800);
	glVertex2i(950, 800);
	glVertex2i(950, 1050);
	glVertex2i(935, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(915, 1050, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(930, 1100, 50,1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(960, 1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree2
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(935, 800);
	glVertex2i(950, 800);
	glVertex2i(1050, 1050);
	glVertex2i(1035, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1015, 1045, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1030, 1100, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1060, 1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree3
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(935, 800);
	glVertex2i(950, 800);
	glVertex2i(850, 1050);
	glVertex2i(835, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(815,1050, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(830,1100, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(860,1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree4
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(135, 800);
	glVertex2i(150, 800);
	glVertex2i(150, 1050);
	glVertex2i(135, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(115, 1050, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(130, 1100, 50,1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(160, 1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree5
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(135, 800);
	glVertex2i(150, 800);
	glVertex2i(250, 1050);
	glVertex2i(235, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(215, 1045, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(230, 1100, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(260, 1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree6
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(135, 800);
	glVertex2i(150, 800);
	glVertex2i(50, 1050);
	glVertex2i(35, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(15,1050, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(30,1100, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(60,1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree7
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(1735, 800);
	glVertex2i(1750, 800);
	glVertex2i(1750, 1050);
	glVertex2i(1735, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1715, 1050, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1730, 1100, 50,1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1760, 1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree8
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(1735, 750);
	glVertex2i(1750, 750);
	glVertex2i(1850, 1050);
	glVertex2i(1835, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1815, 1045, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1830, 1100, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1860, 1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree9
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(1735, 750);
	glVertex2i(1750, 750);
	glVertex2i(1650, 1050);
	glVertex2i(1635, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1615,1050, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1630,1100, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1660,1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree10
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(1435, 800);
	glVertex2i(1450, 800);
	glVertex2i(1450, 1050);
	glVertex2i(1435, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1415, 1050, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1430, 1100, 50,1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1460, 1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree11
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(1235, 800);
	glVertex2i(1250, 800);
	glVertex2i(1250, 1050);
	glVertex2i(1235, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1215, 1050, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1230, 1100, 50,1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1260, 1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree12
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(435, 800);
	glVertex2i(450, 800);
	glVertex2i(450, 1050);
	glVertex2i(435, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(415, 1050, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(430, 1100, 50,1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(460, 1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree13
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(635, 800);
	glVertex2i(650, 800);
	glVertex2i(650, 1050);
	glVertex2i(635, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(615, 1050, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(630, 1100, 50,1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(660, 1050, 50, 1500);

	glBegin(GL_POLYGON); //Tree14
	glColor3f(1.2, 0.5, 0.4);
	glVertex2i(1970, 800);
	glVertex2i(1985, 800);
	glVertex2i(1985, 1050);
	glVertex2i(1970, 1050);

	glEnd();
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1970, 1050, 50, 1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(1985, 1100, 50,1500);
	glColor3f(0.0, 0.7, 0.1);
	DrawCircle(2000, 1050, 50, 1500);



	glPopMatrix();

}

void drawBoat(int i)
{
	glPushMatrix();

	glBegin(GL_QUADS); //BOAT
	glColor3f(0.0, 0.1, 0.1);
	glVertex2i(100,100);
	glVertex2i(400, 100);
	glVertex2i(480,200);
	glVertex2i(50,200);
	glVertex2i(100,100);
    glEnd();

	glBegin(GL_POLYGON); //BOAT
	glColor3f(0.9, 1.8, 0.5);
	glVertex2i(120,200);
	glVertex2i(240, 200);
	glVertex2i(190,260);
	glEnd();

	glBegin(GL_QUADS); //BOAT
	glColor3f(1.3, 1.1, 0.3);
	glVertex2i(240,200);
	glVertex2i(420, 200);
	glVertex2i(350,260);
	glVertex2i(190,260);
	glVertex2i(240,200);
    glEnd();
}

void drawBoat1(int i)
{
	glPushMatrix();

	glBegin(GL_QUADS); //BOAT
	glColor3f(0.0, 0.1, 0.1);
	glVertex2i(1600,300);
	glVertex2i(1900, 300);
	glVertex2i(1980,400);
	glVertex2i(1550,400);
	glVertex2i(1600,300);
    glEnd();

	glBegin(GL_POLYGON); //BOAT
	glColor3f(0.9, 1.8, 0.5);
	glVertex2i(1620,400);
	glVertex2i(1740, 400);
	glVertex2i(1690,460);
	glEnd();

	glBegin(GL_QUADS); //BOAT
	glColor3f(1.3, 1.1, 0.3);
	glVertex2i(1740,400);
	glVertex2i(1920, 400);
	glVertex2i(1850,460);
	glVertex2i(1690,460);
	glVertex2i(1640,400);
    glEnd();
}

void drawBoat2(int i)
{
	glPushMatrix();

	glBegin(GL_QUADS); //BOAT
	glColor3f(0.0, 0.1, 0.1);
	glVertex2i(100,500);
	glVertex2i(400, 500);
	glVertex2i(480,600);
	glVertex2i(50,600);
	glVertex2i(100,500);
    glEnd();

	glBegin(GL_POLYGON); //BOAT
	glColor3f(0.9, 1.8, 0.5);
	glVertex2i(120,600);
	glVertex2i(240,600);
	glVertex2i(190,660);
	glEnd();

	glBegin(GL_QUADS); //BOAT
	glColor3f(1.3, 1.1, 0.3);
	glVertex2i(240,600);
	glVertex2i(420,600);
	glVertex2i(350,660);
	glVertex2i(190,660);
	glVertex2i(240,600);
    glEnd();
}

void boat()
{
	if (boatStatus == 1)
	{
		boatX += 1.5;
	}
	if (boatX>2000)
	{
		boatX = -600;
	}
	glPushMatrix();
	glTranslatef(boatX, boatY, 0);
	drawBoat(1);
	glPopMatrix();
}

void boat1()
{
	if (boatStatus1 == 1)
	{
		boatX1 -=0.4;
	}
	if (boatX1>2000)
	{
		boatX1 =-600;
	}
	glPushMatrix();
	glTranslatef(boatX1, boatY1, 0);
	drawBoat1(1);
	glPopMatrix();
}

void boat2()
{
	if (boatStatus2 == 1)
	{
		boatX2 += 2;
	}
	if (boatX2>2000)
	{
		boatX2 = -600;
	}
	glPushMatrix();
	glTranslatef(boatX2, boatY2, 0);
	drawBoat2(1);
	glPopMatrix();
}

void drawRain(int j)
{


	int x = 0, y = 0;
	glColor3f(0.9, 0.9, 0.9);
	for (int i = 0; i<80; i++)
	{
		for (int j = 0; j<80; j++)
		{
			glBegin(GL_LINES);
			glVertex2i(x, y);
			y += 10;
			glVertex2i(x + 3, y);
			y += 30;
			glEnd();
		}
		y = 0;
		x += 30;
	}


}
void rain()
{
	if (rainStatus == 1)
	{
		traRainY -= 2.5;

		if (traRainY<-100)
		{
			traRainY = 0;
		}
	}

	glPushMatrix();
	glTranslatef(traRainX, traRainY, 0);
	drawRain(0);
	glPopMatrix();
}

	void keyboard(unsigned char key,int x,int y)

	{



		if( key =='S'|| key=='s')		//sun start
		{
			sunStatus = 1;
	    }

		else if( key =='N'|| key=='n')		//sun  start
		{
			sunStatus = 0;
		}

        else if (key =='L'||key =='l'){        //sun down
            sunDown=1;
        }
		else if( key =='C'|| key=='c')
			//megh start
		{
			meghStatus = 1;
		}
		else if( key =='e'|| key=='E')
			//megh start
		{
			meghStatus = 0;
	}

	else if(key=='1')
	   {		               //boat start
	    boatStatus = 1;

		}


		else if(key== '2')
			//boat stop
		{
			boatStatus = 0;

		}

		else if(key=='3')
	   {		               //boat1 start
	    boatStatus1 = 1;

		}


		else if(key== '4')
			//boat stop
		{
			boatStatus1 = 0;

		}

		else if(key=='5')
	   {		               //boat2 start
	    boatStatus2 = 1;

		}


		else if(key== '6')
			//boat stop
		{
			boatStatus2 = 0;

		}

		else if (key == 'r')		//rain start
	{
		rainStatus = 1;
	}
	else if (key == 't')		//rain stop
	{
		rainStatus = 0;
}
		else{

		}



	}


   void myDisplay(void)
	{
			 sky();
			 moveSun();
			 hills();
			 tree();
             scene();
             boat();
             boat1();
             boat2();
             rain();
			 movemegh();
			 glFlush();
			 glutPostRedisplay();
			 glutSwapBuffers();
}

void myInit(void)
{
	glClearColor(0.0, 0.0, 1.0, 0.0);
	glColor3f(1.0f, 1.0f, 1.0f);
	glPointSize(0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 2000.0, 0.0, 1500.0);
}

int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(2000, 1500);
	glutInitWindowPosition(0, 0);

	glutCreateWindow("village view");
	glutKeyboardFunc(keyboard);
	glutDisplayFunc(myDisplay);
	myInit();
	glutMainLoop();
}
